package main

import "fmt"

func main() {
	// [산술 연산자]
	// 1) 사칙연산(+, -, *, /, %)
	// 2) 비트연산(&, |, ^, &^) → and, or, xor, 비트클리어
	// 3) 시프트연산(<<, >>) → 왼쪽 시프트, 오른쪽 시프트

	// 3) 시프트연산
	// - 정수 << 양의 정수 / 정수 >> 양의 정수 여야한다.
	// - 음의 정수가 오면 프로그램이 비정상 종료됨

	// (1) 왼쪽 시프트
	// - 비트를 왼쪽으로 밀어냄
	// - 비트가 이동되어 빈 자리는 0으로 채워짐
	// - 자릿수를 벗어난 비트는 버려짐
	var x int8 = 4
	var y int8 = 64

	fmt.Println("x << 2 = ", x<<2) // 16
	fmt.Println("y << 2 = ", y<<2) // 0 → 범위 밖으로 벗어나서 비트가 버려짐

	// (2) 오른쪽 시프트
	// - 비트를 오른쪽으로 밀어냄
	// - 왼쪽에 추가되는 비트는 최상위 비트값과 같은 비트가 추가됨
	//   ① 부호 있는 정수
	//    - 양수 : 0이 채워짐
	//    - 음수 : 1이 채워짐
	//   ② 부호 없는 정수
	//    - 0으로 채워짐

	var a int8 = 16
	var b int8 = -128
	var c int8 = -1
	var d uint8 = 128

	fmt.Println("a >> 2 = ", a>>2) // 4
	fmt.Println("b >> 2 = ", b>>2) // -32
	fmt.Println("c >> 2 = ", c>>2) // -1
	fmt.Println("d >> 2 = ", d>>2) // 32
}
