package main

import (
	"container/ring"
	"fmt"
)

func main() {
	// [링]
	// - 리스트를 기반으로 만들어진 자료구조
	// - 맨 뒤의 요소와 맨 앞의 요소가 서로 연결됨
	// - 시작과 끝이 없고, 현재 위치만 존재함

	// - 링을 사용하는 경우
	//   - 저장할 개수가 고정되고, 오래된 요소는 지워도 되는 경우
	//     1) Ctrl + Z로 실행 취소
	//       - 일정한 개수의 명령을 저장하고 실행 취소하는 경우
	//     2) 고정 크기 버퍼
	//       - 고정된 길이로 버퍼를 사용할 때
	//     3) 리플레이
	//       - 10초 리플레이 → 고정된 길이의 리플레이 기능

	r := ring.New(5) // 요소가 5개인 링 생성
	// r은 현재 위치를 나타내는 포인터 → 첫 번째 요소 인스턴스 반환

	n := r.Len() // 링 길이 반환

	for i := 0; i < n; i++ {
		r.Value = 'A' + i // 순회하면서 모든 요소에 값 대입
		r = r.Next()      // 다음 요소의 인스턴스를 반환
	}

	for j := 0; j < n; j++ {
		fmt.Printf("%c ", r.Value)
		r = r.Next() // 순회하며 값 출력
	}
	// A B C D E

	fmt.Println()

	for j := 0; j < n; j++ {
		fmt.Printf("%c ", r.Value)
		r = r.Prev() // 역순하며 값 출력
	}
	// A E D C B
}
