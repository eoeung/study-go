package main

import "fmt"

func main() {
	// [함수 리터럴 내부 상태]
	// -

	i := 0
	fmt.Printf("## %p :: %d\n", &i, i) // ## 0xc000096068 :: 0

	f := func() {
		fmt.Printf("## %p :: %d\n", &i, i) // ## 0xc000096068 :: 1
		// → 같은 메모리 주소인 것을 확인할 수 있음

		i += 10
		// 함수 내부에 없는, 외부 변수 i임
		// → 함수 리터럴 내부에서 외부 변수인 i에 접근
	}

	i++

	f() // f 함수 타입 변수를 사용해서 함수 리터럴 실행

	fmt.Println(i)

	// ※ 함수 리터럴이 정의되는 시점이 아닌, 함수가 호출되는 시점 값으로 사용됨
	// 1) 함수 리터럴이 정의되는 시점에 i는 0이다.
	// 2) 함수가 호출되는 시점의 i는 1이다. (i++)
	// 3) 함수 리터럴의 내부의 i는 0이 아니라 1이 됨
	// 4) 함수 리터럴에서 외부 변수를 내부 변수로 가져올 때, 값 복사가 아닌 인스턴스 참조로 가져옴 → 포인터 형태
}
